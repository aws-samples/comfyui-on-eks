apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: karpenter-nodepool
spec:
  disruption:
    consolidateAfter: 30s
    consolidationPolicy: WhenEmpty
  template:
    metadata: {}
    spec:
      expireAfter: Never
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: node-gpu
      requirements:
      - key: "karpenter.sh/capacity-type"
        operator: In
        values: ["spot", "on-demand"]
      - key: node.kubernetes.io/instance-type
        operator: In
        values: ["g6.2xlarge", "g5.2xlarge"]
      - key: kubernetes.io/os
        operator: In
        values: ["linux"]
      - key: kubernetes.io/arch
        operator: In
        values: ["amd64"]
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: node-gpu
spec:
  amiFamily: AL2023
  amiSelectorTerms:
    - alias: al2023@v20241213
  blockDeviceMappings:
  - deviceName: /dev/xvda
    ebs:
      volumeSize: 100Gi
      volumeType: gp3
  role: Comfyui-Cluster-ComfyuiClusterkarpenternoderole-123456
  securityGroupSelectorTerms:
  - tags:
      Name: eks-cluster-sg-Comfyui-Cluster*
  subnetSelectorTerms:
  - tags:
      Name: Comfyui-Cluster/ComfyuiVPC/private*
  tags:
    Cost-Center: AI-Lab
    Name: ComfyUI-EKS-GPU-Node
  userData: |
    #!/bin/bash
    mkfs -t xfs /dev/nvme1n1
    mkdir -p /comfyui-models
    mount /dev/nvme1n1 /comfyui-models
    account=$(aws sts get-caller-identity --query 'Account' --output text)
    region=$(ec2-metadata --availability-zone | sed 's/.$//'|awk '{print $NF}')
    echo "Downloading models from s3://comfyui-models-${account}-${region}"
    aws configure set default.s3.preferred_transfer_client crt
    aws s3 sync s3://comfyui-models-${account}-${region} /comfyui-models/
